diff --git mlibc-clean/meson.build mlibc-workdir/meson.build
index 12a74ae..91af059 100644
--- mlibc-clean/meson.build
+++ mlibc-workdir/meson.build
@@ -154,6 +154,11 @@ elif host_machine.system() == 'dripos'
 	rtdl_include_dirs += include_directories('sysdeps/dripos/include')
 	libc_include_dirs += include_directories('sysdeps/dripos/include')
 	subdir('sysdeps/dripos')
+elif host_machine.system() == 'flan'
+    disable_linux_option = true
+	rtdl_include_dirs += include_directories('sysdeps/flan/include')
+	libc_include_dirs += include_directories('sysdeps/flan/include')
+	subdir('sysdeps/flan')
 else
 	error('No sysdeps defined for OS: ' + host_machine.system())
 endif
diff --git mlibc-workdir/sysdeps/flan/crt-src/crt0.S mlibc-workdir/sysdeps/flan/crt-src/crt0.S
new file mode 100644
index 0000000..9e81022
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/crt-src/crt0.S
@@ -0,0 +1,6 @@
+.section .text
+.global _start
+_start:
+    mov $main, %rdi
+    call __mlibc_entry
+.section .note.GNU-stack,"",%progbits
diff --git mlibc-workdir/sysdeps/flan/crt-src/crti.S mlibc-workdir/sysdeps/flan/crt-src/crti.S
new file mode 100644
index 0000000..f04679c
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/crt-src/crti.S
@@ -0,0 +1,10 @@
+.section .init
+.global _init
+_init:
+	push %rax
+
+.section .fini
+.global _fini
+_fini:
+	push %rax
+.section .note.GNU-stack,"",%progbits
diff --git mlibc-workdir/sysdeps/flan/crt-src/crtn.S mlibc-workdir/sysdeps/flan/crt-src/crtn.S
new file mode 100644
index 0000000..1b61d5a
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/crt-src/crtn.S
@@ -0,0 +1,8 @@
+.section .init
+	pop %rax
+	ret
+
+.section .fini
+	pop %rax
+	ret
+.section .note.GNU-stack,"",%progbits
diff --git mlibc-workdir/sysdeps/flan/generic/entry.cpp mlibc-workdir/sysdeps/flan/generic/entry.cpp
new file mode 100644
index 0000000..265ab56
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/generic/entry.cpp
@@ -0,0 +1,32 @@
+#include <stdint.h>
+#include <stdlib.h>
+#include <bits/ensure.h>
+#include <mlibc/elf/startup.h>
+
+// defined by the POSIX library
+void __mlibc_initLocale();
+
+extern "C" uintptr_t *__dlapi_entrystack();
+
+extern char **environ;
+static mlibc::exec_stack_data __mlibc_stack_data;
+
+struct LibraryGuard {
+	LibraryGuard();
+};
+
+static LibraryGuard guard;
+
+LibraryGuard::LibraryGuard() {
+	__mlibc_initLocale();
+
+	// Parse the exec() stack.
+	mlibc::parse_exec_stack(__dlapi_entrystack(), &__mlibc_stack_data);
+	mlibc::set_startup_data(__mlibc_stack_data.argc, __mlibc_stack_data.argv,
+			__mlibc_stack_data.envp);
+}
+
+extern "C" void __mlibc_entry(int (*main_fn)(int argc, char *argv[], char *env[])) {
+	auto result = main_fn(__mlibc_stack_data.argc, __mlibc_stack_data.argv, environ);
+	exit(result);
+}
diff --git mlibc-workdir/sysdeps/flan/generic/generic.cpp mlibc-workdir/sysdeps/flan/generic/generic.cpp
new file mode 100644
index 0000000..6c37a34
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/generic/generic.cpp
@@ -0,0 +1,176 @@
+#include <bits/ensure.h>
+#include <stddef.h>
+
+#include <stdint.h>
+#include <errno.h>
+#include <abi-bits/seek-whence.h>
+#include <abi-bits/vm-flags.h>
+#include <bits/off_t.h>
+#include <bits/ssize_t.h>
+#include <abi-bits/stat.h>
+#include <mlibc/fsfd_target.hpp>
+#include <fcntl.h>
+
+typedef struct {
+	uint64_t ret;
+	uint64_t errno;
+} syscall_ret_t;
+
+#define NOT_IMPLEMENTED { __ensure(!"NOT IMPLEMENTED"); __builtin_unreachable(); }
+
+#define SYSCALL0(NUM) ({               \
+    asm volatile ("syscall"                  \
+                  : "=a"(ret.ret), "=d"(ret.errno)   \
+                  : "a"(NUM)                 \
+                  : "rcx", "r11", "memory"); \
+})
+
+#define SYSCALL1(NUM, ARG0) ({               \
+    asm volatile ("syscall"                  \
+                  : "=a"(ret.ret), "=d"(ret.errno)   \
+                  : "a"(NUM), "D"(ARG0)      \
+                  : "rcx", "r11", "memory"); \
+})
+
+#define SYSCALL2(NUM, ARG0, ARG1) ({               \
+    asm volatile ("syscall"                        \
+                  : "=a"(ret.ret), "=d"(ret.errno)         \
+                  : "a"(NUM), "D"(ARG0), "S"(ARG1) \
+                  : "rcx", "r11", "memory");       \
+})
+
+#define SYSCALL3(NUM, ARG0, ARG1, ARG2) ({                    \
+    asm volatile ("syscall"                                   \
+                  : "=a"(ret.ret), "=d"(ret.errno)                    \
+                  : "a"(NUM), "D"(ARG0), "S"(ARG1), "d"(ARG2) \
+                  : "rcx", "r11", "memory");                  \
+})
+
+#define SYSCALL4(NUM, ARG0, ARG1, ARG2, ARG3) ({               \
+    register uintptr_t arg3 asm("r10") = ARG3;                 \
+    asm volatile ("syscall"                                    \
+                 : "=a"(ret.ret), "=d"(ret.errno)                     \
+                  : "a"(NUM), "D"(ARG0), "S"(ARG1), "d"(ARG2), \
+                    "r"(arg3)                                  \
+                  : "rcx", "r11", "memory");                   \
+})
+
+#define SYSCALL5(NUM, ARG0, ARG1, ARG2, ARG3, ARG4) ({   \
+    register uintptr_t arg3 asm("r10") = ARG3;              \
+    register uintptr_t arg4 asm("r8")  = ARG4;              \
+    asm volatile ("syscall"                                    \
+                  : "=a"(ret.ret), "=d"(ret.errno)                     \
+                  : "a"(NUM), "D"(ARG0), "S"(ARG1), "d"(ARG2), \
+                    "r"(arg3), "r"(arg4)                       \
+                  : "rcx", "r11", "memory");                   \
+})
+
+#define SYSCALL6(NUM, ARG0, ARG1, ARG2, ARG3, ARG4, ARG5) ({   \
+    register uintptr_t arg3 asm("r10") = ARG3;              \
+    register uintptr_t arg4 asm("r8")  = ARG4;              \
+    register uintptr_t arg5 asm("r9")  = ARG5;              \
+    asm volatile ("syscall"                                    \
+                  : "=a"(ret.ret), "=d"(ret.errno)                     \
+                  : "a"(NUM), "D"(ARG0), "S"(ARG1), "d"(ARG2), \
+                    "r"(arg3), "r"(arg4), "r"(arg5)            \
+                  : "rcx", "r11", "memory");                   \
+})
+
+#define SYSCALL_LOG 0
+#define SYSCALL_MMAP 1
+#define SYSCALL_OPENAT 2
+#define SYSCALL_READ 3
+#define SYSCALL_SEEK 4
+#define SYSCALL_SET_FS_BASE 5
+#define SYSCALL_EXIT_THREAD 6
+
+namespace mlibc {
+
+void sys_libc_log(const char *message) {
+    syscall_ret_t ret;
+    SYSCALL1(SYSCALL_LOG, message);
+}
+
+//XXX
+void sys_exit(int status) {
+    syscall_ret_t ret;
+    SYSCALL0(SYSCALL_EXIT_THREAD);
+}
+void sys_libc_panic() {
+    sys_libc_log("\nMLIBC PANIC\n");
+    for(;;);
+}
+
+int sys_vm_map(void *hint, size_t size, int prot, int flags, int fd,
+               off_t offset, void **window) {
+    syscall_ret_t ret;
+    SYSCALL6(SYSCALL_MMAP, hint, size, prot, flags, fd, offset);
+    void* ret_val = (void *)ret.ret;
+    if (ret_val == MAP_FAILED) {
+        return ret.errno;
+    }
+    *window = ret_val;
+    return 0;
+}
+
+int sys_anon_allocate(size_t size, void **pointer) {
+    int errno = sys_vm_map(NULL, size, PROT_READ | PROT_WRITE | PROT_EXEC, MAP_ANON, -1, 0, pointer);
+    return errno;
+}
+
+int sys_openat(int dirfd, const char *path, int flags, mode_t mode, int *fd) {
+    syscall_ret_t ret;
+    SYSCALL4(SYSCALL_OPENAT, dirfd, path, flags, mode);
+    if (ret.ret == -1)
+        return ret.errno;
+    *fd = ret.ret;
+    return 0;
+}
+
+
+int sys_open(const char *path, int flags, mode_t mode, int *fd) {
+	return sys_openat(AT_FDCWD, path, flags, mode, fd);
+}
+
+int sys_read(int fd, void *buf, size_t count, ssize_t *bytes_read) {
+    syscall_ret_t ret;
+    SYSCALL3(SYSCALL_READ, fd, buf, count);
+	int ret_val = (int)ret.ret;
+	if (ret_val == -1) {
+		return ret.errno;
+	}
+	*bytes_read = ret_val;
+	return 0;
+}
+
+int sys_seek(int fd, off_t offset, int whence, off_t *new_offset){
+	syscall_ret_t ret;
+    SYSCALL3(SYSCALL_SEEK, fd, offset, whence);
+	off_t ret_val = (off_t)ret.ret;
+	if (ret_val == -1) {
+		return ret.errno;
+	}
+	*new_offset = ret_val;
+	return 0;
+}
+
+int sys_close(int fd) {
+    return 0;
+}
+int sys_tcb_set(void *pointer) {
+	syscall_ret_t ret;
+    SYSCALL1(SYSCALL_SET_FS_BASE, pointer);
+    return 0;
+}
+int sys_vm_unmap(void *pointer, size_t size) NOT_IMPLEMENTED
+
+int sys_isatty(int fd) NOT_IMPLEMENTED
+
+
+int sys_anon_free(void *pointer, size_t size) NOT_IMPLEMENTED
+int sys_write(int fd, void const *buf, size_t count, ssize_t *bytes_written)NOT_IMPLEMENTED
+int sys_futex_wait(int *pointer, int expected, timespec const *time)NOT_IMPLEMENTED
+int sys_futex_wake(int *pointer) NOT_IMPLEMENTED
+int sys_clock_get(int clock, time_t *secs, long *nanos) NOT_IMPLEMENTED
+
+} // namespace mlibc
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/access.h mlibc-workdir/sysdeps/flan/include/abi-bits/access.h
new file mode 120000
index 0000000..cb83931
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/access.h
@@ -0,0 +1 @@
+../../../../abis/linux/access.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/auxv.h mlibc-workdir/sysdeps/flan/include/abi-bits/auxv.h
new file mode 120000
index 0000000..c43f878
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/auxv.h
@@ -0,0 +1 @@
+../../../../abis/linux/auxv.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/blkcnt_t.h mlibc-workdir/sysdeps/flan/include/abi-bits/blkcnt_t.h
new file mode 120000
index 0000000..0b0ec27
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/blkcnt_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/blkcnt_t.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/blksize_t.h mlibc-workdir/sysdeps/flan/include/abi-bits/blksize_t.h
new file mode 120000
index 0000000..7dc8d7c
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/blksize_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/blksize_t.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/clockid_t.h mlibc-workdir/sysdeps/flan/include/abi-bits/clockid_t.h
new file mode 120000
index 0000000..6a42da5
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/clockid_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/clockid_t.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/dev_t.h mlibc-workdir/sysdeps/flan/include/abi-bits/dev_t.h
new file mode 120000
index 0000000..bca881e
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/dev_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/dev_t.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/epoll.h mlibc-workdir/sysdeps/flan/include/abi-bits/epoll.h
new file mode 120000
index 0000000..eb4b76d
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/epoll.h
@@ -0,0 +1 @@
+../../../../abis/linux/epoll.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/errno.h mlibc-workdir/sysdeps/flan/include/abi-bits/errno.h
new file mode 120000
index 0000000..6e507de
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/errno.h
@@ -0,0 +1 @@
+../../../../abis/linux/errno.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/fcntl.h mlibc-workdir/sysdeps/flan/include/abi-bits/fcntl.h
new file mode 120000
index 0000000..463e2c9
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/fcntl.h
@@ -0,0 +1 @@
+../../../../abis/linux/fcntl.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/fsblkcnt_t.h mlibc-workdir/sysdeps/flan/include/abi-bits/fsblkcnt_t.h
new file mode 120000
index 0000000..898dfb2
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/fsblkcnt_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/fsblkcnt_t.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/fsfilcnt_t.h mlibc-workdir/sysdeps/flan/include/abi-bits/fsfilcnt_t.h
new file mode 120000
index 0000000..791755c
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/fsfilcnt_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/fsfilcnt_t.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/gid_t.h mlibc-workdir/sysdeps/flan/include/abi-bits/gid_t.h
new file mode 120000
index 0000000..abce6d6
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/gid_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/gid_t.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/in.h mlibc-workdir/sysdeps/flan/include/abi-bits/in.h
new file mode 120000
index 0000000..418d1d5
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/in.h
@@ -0,0 +1 @@
+../../../../abis/linux/in.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/ino_t.h mlibc-workdir/sysdeps/flan/include/abi-bits/ino_t.h
new file mode 120000
index 0000000..4c20aca
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/ino_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/ino_t.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/inotify.h mlibc-workdir/sysdeps/flan/include/abi-bits/inotify.h
new file mode 120000
index 0000000..b5cb282
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/inotify.h
@@ -0,0 +1 @@
+../../../../abis/linux/inotify.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/ioctls.h mlibc-workdir/sysdeps/flan/include/abi-bits/ioctls.h
new file mode 120000
index 0000000..595106b
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/ioctls.h
@@ -0,0 +1 @@
+../../../../abis/linux/ioctls.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/limits.h mlibc-workdir/sysdeps/flan/include/abi-bits/limits.h
new file mode 120000
index 0000000..6c88db2
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/limits.h
@@ -0,0 +1 @@
+../../../../abis/linux/limits.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/mode_t.h mlibc-workdir/sysdeps/flan/include/abi-bits/mode_t.h
new file mode 120000
index 0000000..5d78fdf
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/mode_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/mode_t.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/mqueue.h mlibc-workdir/sysdeps/flan/include/abi-bits/mqueue.h
new file mode 120000
index 0000000..fa87b07
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/mqueue.h
@@ -0,0 +1 @@
+../../../../abis/linux/mqueue.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/nlink_t.h mlibc-workdir/sysdeps/flan/include/abi-bits/nlink_t.h
new file mode 120000
index 0000000..bb3b625
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/nlink_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/nlink_t.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/packet.h mlibc-workdir/sysdeps/flan/include/abi-bits/packet.h
new file mode 120000
index 0000000..998ef1a
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/packet.h
@@ -0,0 +1 @@
+../../../../abis/linux/packet.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/pid_t.h mlibc-workdir/sysdeps/flan/include/abi-bits/pid_t.h
new file mode 120000
index 0000000..baa90f6
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/pid_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/pid_t.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/poll.h mlibc-workdir/sysdeps/flan/include/abi-bits/poll.h
new file mode 120000
index 0000000..8ea6a0a
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/poll.h
@@ -0,0 +1 @@
+../../../../abis/linux/poll.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/ptrace.h mlibc-workdir/sysdeps/flan/include/abi-bits/ptrace.h
new file mode 120000
index 0000000..b2517b2
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/ptrace.h
@@ -0,0 +1 @@
+../../../../abis/linux/ptrace.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/reboot.h mlibc-workdir/sysdeps/flan/include/abi-bits/reboot.h
new file mode 120000
index 0000000..77013a4
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/reboot.h
@@ -0,0 +1 @@
+../../../../abis/linux/reboot.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/resource.h mlibc-workdir/sysdeps/flan/include/abi-bits/resource.h
new file mode 120000
index 0000000..88d7402
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/resource.h
@@ -0,0 +1 @@
+../../../../abis/linux/resource.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/seek-whence.h mlibc-workdir/sysdeps/flan/include/abi-bits/seek-whence.h
new file mode 120000
index 0000000..df7bccf
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/seek-whence.h
@@ -0,0 +1 @@
+../../../../abis/linux/seek-whence.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/shm.h mlibc-workdir/sysdeps/flan/include/abi-bits/shm.h
new file mode 120000
index 0000000..067d8c4
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/shm.h
@@ -0,0 +1 @@
+../../../../abis/linux/shm.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/signal.h mlibc-workdir/sysdeps/flan/include/abi-bits/signal.h
new file mode 120000
index 0000000..4dcb0b7
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/signal.h
@@ -0,0 +1 @@
+../../../../abis/linux/signal.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/socket.h mlibc-workdir/sysdeps/flan/include/abi-bits/socket.h
new file mode 120000
index 0000000..f1dc016
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/socket.h
@@ -0,0 +1 @@
+../../../../abis/linux/socket.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/socklen_t.h mlibc-workdir/sysdeps/flan/include/abi-bits/socklen_t.h
new file mode 120000
index 0000000..41f3b11
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/socklen_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/socklen_t.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/stat.h mlibc-workdir/sysdeps/flan/include/abi-bits/stat.h
new file mode 120000
index 0000000..1f63b41
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/stat.h
@@ -0,0 +1 @@
+../../../../abis/linux/stat.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/statfs.h mlibc-workdir/sysdeps/flan/include/abi-bits/statfs.h
new file mode 120000
index 0000000..e3d202f
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/statfs.h
@@ -0,0 +1 @@
+../../../../abis/linux/statfs.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/statvfs.h mlibc-workdir/sysdeps/flan/include/abi-bits/statvfs.h
new file mode 120000
index 0000000..1fc80c2
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/statvfs.h
@@ -0,0 +1 @@
+../../../../abis/linux/statvfs.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/suseconds_t.h mlibc-workdir/sysdeps/flan/include/abi-bits/suseconds_t.h
new file mode 120000
index 0000000..9ed6597
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/suseconds_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/suseconds_t.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/termios.h mlibc-workdir/sysdeps/flan/include/abi-bits/termios.h
new file mode 120000
index 0000000..ee8f0b0
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/termios.h
@@ -0,0 +1 @@
+../../../../abis/linux/termios.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/time.h mlibc-workdir/sysdeps/flan/include/abi-bits/time.h
new file mode 120000
index 0000000..2a02625
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/time.h
@@ -0,0 +1 @@
+../../../../abis/linux/time.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/uid_t.h mlibc-workdir/sysdeps/flan/include/abi-bits/uid_t.h
new file mode 120000
index 0000000..b306777
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/uid_t.h
@@ -0,0 +1 @@
+../../../../abis/linux/uid_t.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/utsname.h mlibc-workdir/sysdeps/flan/include/abi-bits/utsname.h
new file mode 120000
index 0000000..b285754
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/utsname.h
@@ -0,0 +1 @@
+../../../../abis/linux/utsname.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/vm-flags.h mlibc-workdir/sysdeps/flan/include/abi-bits/vm-flags.h
new file mode 120000
index 0000000..bbe258c
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/vm-flags.h
@@ -0,0 +1 @@
+../../../../abis/linux/vm-flags.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/vt.h mlibc-workdir/sysdeps/flan/include/abi-bits/vt.h
new file mode 120000
index 0000000..5798a4a
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/vt.h
@@ -0,0 +1 @@
+../../../../abis/linux/vt.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/wait.h mlibc-workdir/sysdeps/flan/include/abi-bits/wait.h
new file mode 120000
index 0000000..feb2840
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/wait.h
@@ -0,0 +1 @@
+../../../../abis/linux/wait.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/include/abi-bits/xattr.h mlibc-workdir/sysdeps/flan/include/abi-bits/xattr.h
new file mode 120000
index 0000000..66412d7
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/include/abi-bits/xattr.h
@@ -0,0 +1 @@
+../../../../abis/linux/xattr.h
\ No newline at end of file
diff --git mlibc-workdir/sysdeps/flan/meson.build mlibc-workdir/sysdeps/flan/meson.build
new file mode 100644
index 0000000..49bb989
--- /dev/null
+++ mlibc-workdir/sysdeps/flan/meson.build
@@ -0,0 +1,86 @@
+rtdl_sources += files(
+	'generic/generic.cpp'
+)
+
+libc_sources += files(
+	'generic/entry.cpp',
+	'generic/generic.cpp'
+)
+
+if not no_headers
+	install_headers(
+		'include/abi-bits/auxv.h',
+		'include/abi-bits/seek-whence.h',
+		'include/abi-bits/vm-flags.h',
+		'include/abi-bits/errno.h',
+		'include/abi-bits/fcntl.h',
+		'include/abi-bits/in.h',
+		'include/abi-bits/reboot.h',
+		'include/abi-bits/resource.h',
+		'include/abi-bits/stat.h',
+		'include/abi-bits/signal.h',
+		'include/abi-bits/socket.h',
+		'include/abi-bits/termios.h',
+		'include/abi-bits/time.h',
+		'include/abi-bits/blkcnt_t.h',
+		'include/abi-bits/blksize_t.h',
+		'include/abi-bits/dev_t.h',
+		'include/abi-bits/gid_t.h',
+		'include/abi-bits/ino_t.h',
+		'include/abi-bits/mode_t.h',
+		'include/abi-bits/nlink_t.h',
+		'include/abi-bits/pid_t.h',
+		'include/abi-bits/uid_t.h',
+		'include/abi-bits/access.h',
+		'include/abi-bits/wait.h',
+		'include/abi-bits/limits.h',
+		'include/abi-bits/utsname.h',
+		'include/abi-bits/ptrace.h',
+		'include/abi-bits/poll.h',
+		'include/abi-bits/epoll.h',
+		'include/abi-bits/packet.h',
+		'include/abi-bits/inotify.h',
+		'include/abi-bits/clockid_t.h',
+		'include/abi-bits/shm.h',
+		'include/abi-bits/mqueue.h',
+		'include/abi-bits/suseconds_t.h',
+		'include/abi-bits/fsfilcnt_t.h',
+		'include/abi-bits/fsblkcnt_t.h',
+		'include/abi-bits/socklen_t.h',
+		'include/abi-bits/statfs.h',
+		'include/abi-bits/statvfs.h',
+		'include/abi-bits/ioctls.h',
+		'include/abi-bits/xattr.h',
+		subdir: 'abi-bits'
+	)
+endif
+
+if not headers_only
+	crt = custom_target('crt0',
+		build_by_default: true,
+		command: c_compiler.cmd_array() + ['-c', '-o', '@OUTPUT@', '@INPUT@'],
+		input: 'crt-src/crt0.S',
+		output: 'crt0.o',
+		install: true,
+		install_dir: get_option('libdir')
+	)
+
+	custom_target('crti',
+		build_by_default: true,
+		command: c_compiler.cmd_array() + ['-c', '-o', '@OUTPUT@', '@INPUT@'],
+		input: 'crt-src/crti.S',
+		output: 'crti.o',
+		install: true,
+		install_dir: get_option('libdir')
+	)
+
+	custom_target('crtn',
+		build_by_default: true,
+		command: c_compiler.cmd_array() + ['-c', '-o', '@OUTPUT@', '@INPUT@'],
+		input: 'crt-src/crtn.S',
+		output: 'crtn.o',
+		install: true,
+		install_dir: get_option('libdir')
+	)
+endif
+
